{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css","Redux/actions/contactActions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Redux/actions/filterActions.js","Components/Filter/Filter.js","App.js","Redux/reducer/contactsReducers.js","Redux/reducer/filterReducers.js","Redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid_v4","deleteContact","ContactForm","state","isExist","duplicateContact","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","phoneBookReducer","map","contact","toLowerCase","includes","setTimeout","onSubmit","handleCloseErrorWindow","prevState","this","localStorage","setItem","JSON","stringify","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","className","title_phonebook","onClick","error","wrapper","title_item","input","type","autoComplete","onChange","mask","placeholder","pattern","button_wrapper","button","disabled","Component","connect","dispatch","data","contactActions","ContactList","handleDeleteContact","TransitionGroup","component","item","list","normalizedFilter","filter","filterContactReducer","filterContactByName","onFilter","filterActions","title","App","length","createReducer","getItem","parse","initialState","action","combineReducers","store","configureStore","reducer","contactsReducers","filterReducers","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.acbed81d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1bm3j\",\"list\":\"ContactList_list__D2rHv\",\"button\":\"ContactList_button__8rhIw\",\"enter\":\"ContactList_enter__1e5dc\",\"enterActive\":\"ContactList_enterActive__24nqZ\",\"exit\":\"ContactList_exit__mAuaP\",\"exitActive\":\"ContactList_exitActive__10VH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__24Jei\",\"title\":\"Filter_title__IM1Ds\",\"input\":\"Filter_input__3THxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2MgNT\",\"title\":\"App_title__32HfN\",\"item\":\"App_item__1Y10z\",\"appear\":\"App_appear__1tUkU\",\"appearActive\":\"App_appearActive__Znkz8\",\"enter\":\"App_enter__2B1a2\",\"enterActive\":\"App_enterActive__8MOqg\",\"exit\":\"App_exit__2b5qc\",\"exitActive\":\"App_exitActive__1NeyL\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuid_v4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/delete', id => ({\r\n  payload: {\r\n    id,\r\n  },\r\n}));\r\nexport default { addContact, deleteContact };\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../Redux/actions/contactActions';\r\nimport styles from './ContactForm.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    isExist: false,\r\n    duplicateContact: '',\r\n  };\r\n  componentDidUpdate(prevState) {\r\n    const { contacts } = this.props;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n    const availableNames = contacts.phoneBookReducer.map(contact =>\r\n      contact.name.toLowerCase(),\r\n    );\r\n\r\n    if (availableNames.includes(name.toLowerCase())) {\r\n      this.setState({ isExist: true, duplicateContact: name });\r\n      setTimeout(\r\n        () => this.setState({ isExist: false, duplicateContact: '' }),\r\n        5000,\r\n      );\r\n    } else {\r\n      this.props.onSubmit(this.state);\r\n      this.setState({\r\n        name: '',\r\n        number: '',\r\n        isExist: false,\r\n        duplicateContact: '',\r\n      });\r\n    }\r\n  };\r\n  handleCloseErrorWindow = () => {\r\n    this.setState({\r\n      isExist: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isExist, duplicateContact } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={500}\r\n            classNames={styles}\r\n            unmountOnExit\r\n          >\r\n            <h1 className={styles.title_phonebook}>Phonebook</h1>\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            in={isExist}\r\n            timeout={250}\r\n            classNames={styles}\r\n            unmountOnExit\r\n          >\r\n            <div onClick={this.handleCloseErrorWindow} className={styles.error}>\r\n              {duplicateContact} already exist!\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <div className={styles.wrapper}>\r\n              <h3 className={styles.title_item}>Name</h3>\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </label>\r\n          <label>\r\n            <div className={styles.wrapper}>\r\n              <h3 className={styles.title_item}>Number</h3>\r\n              <InputMask\r\n                mask=\"999-99-99\"\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange}\r\n                value={number}\r\n                name=\"number\"\r\n                placeholder=\"000-00-00\"\r\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              />\r\n            </div>\r\n          </label>\r\n          <div className={styles.button_wrapper}>\r\n            <button\r\n              className={styles.button}\r\n              type=\"submit\"\r\n              disabled={name === '' || number === '' ? true : false}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactActions.addContact(data)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport contactActions from '../../Redux/actions/contactActions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactList extends Component {\r\n  handleDeleteContact = id => () => {\r\n    const { deleteContact } = this.props;\r\n    deleteContact(id);\r\n  };\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.item}>\r\n        {contacts.map(item => (\r\n          <CSSTransition key={item.id} timeout={250} classNames={styles}>\r\n            <li className={styles.list}>\r\n              {item.name} : {item.number}\r\n              <button\r\n                className={styles.button}\r\n                id={item.id}\r\n                onClick={this.handleDeleteContact(item.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => {\r\n  const normalizedFilter = filter.filterContactReducer.toLowerCase();\r\n  const visibleNumbers = contacts.phoneBookReducer.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return { contacts: visibleNumbers };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContactByName = createAction('contact/filter', value => {\r\n  return {\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n});\r\nexport default filterContactByName;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport filterActions from \"../../Redux/actions/filterActions\";\r\nimport styles from \"./Filter.module.css\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n    <div className={styles.wrapper}>\r\n        <p className={styles.title}>Find contact</p>\r\n        <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        onChange={onFilter}\r\n        value={value}\r\n        name=\"filter\"></input>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filter: state.filter,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onFilter: (e) => dispatch(filterActions(e.target.value)),\r\n})\r\n\r\nFilter.propTypes = {\r\n    onFilter: PropTypes.func,\r\n    value: PropTypes.string\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport styles from \"./App.module.css\"\n\n\nclass App extends Component {\n    render(){\n        const {contacts} = this.props;\n        return (\n            <div className={styles.wrapper}>\n                <ContactForm/>\n                <CSSTransition\n                in={contacts.phoneBookReducer.length > 1}\n                timeout={500}\n                classNames={styles}\n                unmountOnExit>\n                    <Filter/>\n                </CSSTransition>\n                <ContactList/>\n            </div>\n    );}\n  }\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts\n})\nexport default connect(mapStateToProps)(App)","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from '../actions/contactActions';\r\n\r\nconst initialState = () => {\r\n  if (localStorage.getItem('contacts')) {\r\n    return JSON.parse(localStorage.getItem('contacts')).phoneBookReducer;\r\n  }\r\n};\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload.id);\r\n};\r\n\r\nconst phoneBookReducer = createReducer(initialState(), {\r\n  [contactActions.addContact]: addContact,\r\n  [contactActions.deleteContact]: deleteContact,\r\n});\r\n\r\nexport default combineReducers({\r\n  phoneBookReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from '../actions/filterActions';\r\n\r\nconst filterContactReducer = createReducer('', {\r\n  [filterActions]: (state, action) => action.payload.value,\r\n});\r\n\r\nexport default combineReducers({\r\n  filterContactReducer,\r\n});\r\n","// import { createStore, combineReducers } from \"redux\";\r\nimport contactsReducers from './reducer/contactsReducers';\r\nimport filterReducers from './reducer/filterReducers';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n    filter: filterReducers,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport store from \"./Redux/store\";\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.querySelector(\"#root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__3JyIc\",\"title\":\"ContactForm_title__1_AEi\",\"title_phonebook\":\"ContactForm_title_phonebook__17ea6\",\"input\":\"ContactForm_input__2PisC\",\"button_wrapper\":\"ContactForm_button_wrapper__3ioGR\",\"button\":\"ContactForm_button__1mn7H\",\"title_item\":\"ContactForm_title_item__1L_7R\",\"appear\":\"ContactForm_appear__33BWt\",\"appearActive\":\"ContactForm_appearActive__L_Fm_\",\"error\":\"ContactForm_error__2Zuse\"};"],"sourceRoot":""}